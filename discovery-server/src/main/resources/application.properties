spring.application.name=discovery-service
server.port=8761

#Nombre del cliente Eureka
eureka.instance.hostname=localhost
#Definimos como Eureka va a preferir o no, el uso de ip para registrar los clientes
eureka.instance.prefer-ip-address=false

#El servidor Eureka no se registra a si mismo como un cliente en el registro de Eureka.
eureka.client.register-with-eureka=false
#Conocer la lista actualizada de servicios desde otro servidor
eureka.client.fetch-registry=false
#Configurar la url del servidor Eureka, al que un cliente Eureka debe registrarse y buscar el registro de servicios
eureka.client.service-url-defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/

#Seguridad basica para la comunicacion con el servidor de registros
logging.level.org.springframework.web=debug
logging.level.org.springframework.security=debug
spring.security.user.name=eureka
spring.security.user.password=password

#Tracing
#uri del servidor de zipkin donde se envian las trazas de la aplicacion
management.zipkin.tracing.endpoint=http://localhost:9411
#establece la taza de probabilidad de muestreo de las tazas generadas. Esto establece que el 100 por ciento de las trazas son generadas, reduce el rendimiento. COmo ejemplo se establece uno pero deberia ser un 0.1 en ambientes reales
management.tracing.sampling.probability=1.0

logging.pattern.level=%5p [${spring.application.name}, %X{traceId:-}, %X{spanId:-}]